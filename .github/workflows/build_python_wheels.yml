name: hyperarrow python wheels

on:
  release:
    types: [created, edited]
  workflow_dispatch:

jobs:
  build-macos:

    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10"]
      fail-fast: false
    env:
      CTEST_OUTPUT_ON_FAILURE: 1
    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        activate-environment: hyperarrow
        channels: conda-forge
    - name: Download Hyper Library / Headers
      run: |
        mkdir deps
        pushd deps
        wget https://downloads.tableau.com/tssoftware/tableauhyperapi-cxx-macos-x86_64-release-hyperapi_release_26.0.0.13821.r1fbe38ce.zip -O tableauhyperapi.zip
        unzip tableauhyperapi.zip
        mv tableauhyperapi-cxx-macos-x86_64-release-hyperapi_release_26.0.0.13821.r1fbe38ce tableauhyperapi
        popd
    - name: Set up out of core build
      shell: bash -l {0}
      env:
        TABLEAU_CMAKE_PATH: "/Users/runner/work/hyperarrow/hyperarrow/deps/tableauhyperapi/share/cmake"
        MACOSX_DEPLOYMENT_TARGET: "10.9"
      run: |
        conda activate hyperarrow
        conda install -c conda-forge "arrow-cpp>=6.0" boost-cpp pyarrow
        mkdir build
        cd build
        cmake ..
        make
        make test
        make python
        cd ..
    # Py38 gives errors for missing rpath libraries, but seems
    # like a setuptools or delocate bug instead of actual issue?
    - if: matrix.python-version == '3.8'
      name: Fix wheel (py38)
      shell: bash -l {0}
      run: |
        conda activate hyperarrow
        conda install -c conda-forge pytest delocate wheel
        HYPER_WHEEL_LOC=$(ls -d python/dist/*)
        echo About to delocate $HYPER_WHEEL_LOC
        delocate-wheel -v $HYPER_WHEEL_LOC --ignore-missing-dependencies
        # delocate-wheel will copy all required libraries but
        # the tableauhyperapi also requires the hyperd executable
        # so we manually copy that into the wheel as a workaround
        python -m wheel unpack $HYPER_WHEEL_LOC
        # TODO: Don't hard code version here!!!
        cp -r deps/tableauhyperapi/lib/hyper hyperarrow-0.0.1.dev0/hyperarrow/.dylibs
        python -m wheel pack hyperarrow-0.0.1.dev0
    - if: matrix.python-version != '3.8'
      name: Fix wheel
      shell: bash -l {0}
      run: |
        conda activate hyperarrow
        conda install -c conda-forge pytest delocate wheel
        HYPER_WHEEL_LOC=$(ls -d python/dist/*)
        echo About to delocate $HYPER_WHEEL_LOC
        delocate-wheel -v $HYPER_WHEEL_LOC
        # delocate-wheel will copy all required libraries but
        # the tableauhyperapi also requires the hyperd executable
        # so we manually copy that into the wheel as a workaround
        python -m wheel unpack $HYPER_WHEEL_LOC
        # TODO: Don't hard code version here!!!
        cp -r deps/tableauhyperapi/lib/hyper hyperarrow-0.0.1.dev0/hyperarrow/.dylibs
        python -m wheel pack hyperarrow-0.0.1.dev0
    - name: Upload wheel
      uses: actions/upload-artifact@v2
      with:
        name: macos-${{ matrix.python-version }}
        path: ./*.whl
    - name: Test wheel
      shell: bash -l {0}
      run: |
        conda activate hyperarrow
        python -m pip install hyperarrow*.whl
        python -c "import hyperarrow; hyperarrow.test()"

  build-linux:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10"]
      fail-fast: false
    env:
      CTEST_OUTPUT_ON_FAILURE: 1
    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        activate-environment: hyperarrow
        channels: conda-forge
    - name: Download Hyper Library / Headers
      run: |
        pwd
        mkdir deps
        pushd deps
        wget https://downloads.tableau.com/tssoftware/tableauhyperapi-cxx-linux-x86_64-release-hyperapi_release_26.0.0.13821.r1fbe38ce.zip -O tableauhyperapi.zip
        unzip tableauhyperapi.zip
        mv tableauhyperapi-cxx-linux-x86_64-release-hyperapi_release_26.0.0.13821.r1fbe38ce tableauhyperapi
        pwd
        ls tableauhyperapi
        ls tableauhyperapi/share
        ls tableauhyperapi/share/cmake
        popd
    - name: Set up out of core build
      shell: bash -l {0}
      env:
        TABLEAU_CMAKE_PATH: "/home/runner/work/hyperarrow/hyperarrow/deps/tableauhyperapi/share/cmake"
      run: |
        conda activate hyperarrow
        conda install -c conda-forge "arrow-cpp>=6.0" boost-cpp pyarrow
        mkdir build
        cd build
        cmake ..
        make
        make test
        make python
        cd ..
    - name: Fix wheel
      shell: bash -l {0}
      run: |
        conda activate hyperarrow
        conda install -c conda-forge pytest auditwheel wheel
        HYPER_WHEEL_LOC=$(ls -d python/dist/*)
        echo About to auditwheel $HYPER_WHEEL_LOC
        auditwheel show $HYPER_WHEEL_LOC
        auditwheel repair $HYPER_WHEEL_LOC
        # auditwheel will copy all required libraries but
        # the tableauhyperapi also requires the hyperd executable
        # so we manually copy that into the wheel as a workaround
        python -m wheel unpack $HYPER_WHEEL_LOC
        # TODO: Don't hard code version here!!!
        cp -r deps/tableauhyperapi/lib/hyper hyperarrow-0.0.1.dev0/hyperarrow/.libs
        python -m wheel pack hyperarrow-0.0.1.dev0
    - name: Upload wheel
      uses: actions/upload-artifact@v2
      with:
        name: manylinux-${{ matrix.python-version }}
        path: ./*.whl
    - name: Test wheel
      shell: bash -l {0}
      run: |
        conda activate hyperarrow
        python -m pip install hyperarrow*.whl
        python -c "import hyperarrow; hyperarrow.test()"
